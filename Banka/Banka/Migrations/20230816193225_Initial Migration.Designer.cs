// <auto-generated />
using System;
using Banka.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Banka.Migrations
{
    [DbContext(typeof(BankaDbContext))]
    [Migration("20230816193225_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Banka.Models.Banka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pib")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Banka");
                });

            modelBuilder.Entity("Banka.Models.Filijala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("BrojPultova")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.ToTable("Filijalas");
                });

            modelBuilder.Entity("Banka.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaticniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisniks");
                });

            modelBuilder.Entity("Banka.Models.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilijalaId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisUsluge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provizija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilijalaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Uslugas");
                });

            modelBuilder.Entity("Banka.Models.Filijala", b =>
                {
                    b.HasOne("Banka.Models.Banka", "Banka")
                        .WithMany("Filijals")
                        .HasForeignKey("BankaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banka");
                });

            modelBuilder.Entity("Banka.Models.Usluga", b =>
                {
                    b.HasOne("Banka.Models.Filijala", "Filijala")
                        .WithMany("Uslugas")
                        .HasForeignKey("FilijalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Banka.Models.Korisnik", "Korisnik")
                        .WithMany("Uslugas")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filijala");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Banka.Models.Banka", b =>
                {
                    b.Navigation("Filijals");
                });

            modelBuilder.Entity("Banka.Models.Filijala", b =>
                {
                    b.Navigation("Uslugas");
                });

            modelBuilder.Entity("Banka.Models.Korisnik", b =>
                {
                    b.Navigation("Uslugas");
                });
#pragma warning restore 612, 618
        }
    }
}
